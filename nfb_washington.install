<?php

use Drupal\Core\Database\Database;

class database_functions
{
    public function table_test($table_name) // check if table exists already and drops it if it does
    {
        if (db_table_exists($table_name)) {
            \Drupal::logger('nfb_contribution_install')->notice("Dropping Table " . $table_name);
            db_drop_table($table_name);
        }
    }
    public function create_table($schema, $table_name)
    {
        $query = Database::getConnection()->schema();
        $query->createTable($table_name, $schema[$table_name]);
    }

}
class member_table extends  database_functions
{
    public function set_up_member_table()
    {
        $table_name = 'nfb_washington_members';
        $this->table_test($table_name);
        $this->build_member_table($table_name, $schema);
        $schema[$table_name]['description'] = "Table for members of congress";
        $schema[$table_name]['primary key'] = ['member_id'];
        $this->create_table($schema, $table_name);
    }
    public function  build_member_table($table_name, &$schema)
    {
        $schema[$table_name]['fields']['member_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: member id'
        );
        $schema[$table_name]['fields']['civicrm_contact_id'] = array(
            'type'=> 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => TRUE,
            'description' => 'Link to Civi Contact data'
        );
        $schema[$table_name]['fields']['district'] = array(
            'type'=> 'varchar',
            'length' => 64,
            'default' => '0',
            'not null' => False,
            'description' => 'District Number: Null for senators'
        );

        $schema[$table_name]['fields']['rank'] = array(
            'type'=> 'varchar',
            'length' => 64,
            'default' => '0',
            'not null' => False,
            'description' => 'Senator Rank: Null is for House reps. 1 for Senior 2 for Junior'
        );
        $schema[$table_name]['fields']['active'] = array(
            'type'=> 'int',
            'size' => 'tiny',
            'default' => '0',
            'not null' => TRUE,
            'description' => 'True or false on whether representative is currently in congress'
        );
        $schema[$table_name]['fields']['state'] = array(
            'type' => 'varchar',
            'length' => 8,
            'not null' => TRUE,
            'default' => '',
            'description' => 'State abbreviation',
        );
        $schema[$table_name]['fields']['propublica_id'] = array(
            'type' => 'varchar',
            'length' => 64,
            'not null' => TRUE,
            'default' => '',
            'description' => 'ID that propublica is current.ly using for that member of congress',
        );

    }
}
class meeting_table  extends  member_table
{
    public function set_up_meeting_table()
    {
        $table_name = 'nfb_washington_activities';
        $this->table_test($table_name);
        $this->activity_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for meetings and other washington seminar activities";
        $schema[$table_name]['primary key'] = ['activity_id'];
        $this->create_table($schema, $table_name);
    }
    public function activity_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['activity_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: activity id'
        );
        $schema[$table_name]['fields']['member_id'] = array(
            'type'=> 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => TRUE,
            'description' => 'Link to member ID'
        );
        $schema[$table_name]['fields']['type'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => 'Meeting',
            'not null' => TRUE,
            'description' => 'Activity type'
        );
        $schema[$table_name]['fields']['date'] = array(
            'type'=> 'varchar',
            'length' => '16',
            'default' => '1/1/20',
            'not null' => TRUE,
            'description' => 'Activity date'
        );
        $schema[$table_name]['fields']['time'] = array(
            'type'=> 'varchar',
            'length' => '8',
            'default' => '12:00 AM',
            'not null' => TRUE,
            'description' => 'Activity time'
        );
        $schema[$table_name]['fields']['description'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Activity description'
        );
        $schema[$table_name]['fields']['location'] = array(
            'type'=> 'varchar',
            'length' => '500',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Activity location'
        );
        $schema[$table_name]['fields']['m_o_c_contact'] = array(
            'type'=> 'varchar',
            'length' => '500',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Activity contact for member of congress'
        );
        $schema[$table_name]['fields']['nfb_contact'] = array(
            'type'=> 'varchar',
            'length' => '500',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Activity contact for nfb'
        );
        $schema[$table_name]['fields']['nfb_phone'] = array(
            'type'=> 'varchar',
            'length' => '12',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Phone number for the nfb contact'
        );
        $schema[$table_name]['fields']['year'] = array(
            'type'=> 'int',
            'size' => 'big',
            'default' => '2020',
            'not null' => TRUE,
            'description' => 'Link to member ID'
        );
        $schema[$table_name]['fields']['created_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['last_modified_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['foreign keys'] = array(
            'nfb_washington_members' => array(
                'table' => 'nfb_washington_members',
                'columns' => array('member_id' => 'member_id')
            )
        );
    }
}
class issue_table extends meeting_table
{
    public function set_up_issue_table()
    {
        $table_name = 'nfb_washington_issues';
        $this->table_test($table_name);
        $this->issue_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for Issues";
        $schema[$table_name]['primary key'] = ['issue_id'];
        $this->create_table($schema, $table_name);
    }
    public function issue_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['issue_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: issue id'
        );
        $schema[$table_name]['fields']['name'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Issue name'
        );
        $schema[$table_name]['fields']['bill_id'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Bill ID'
        );
        $schema[$table_name]['fields']['bill_slug'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Bill slug for Propublica'
        );
        $schema[$table_name]['fields']['year'] = array(
            'type' => 'int',
            'size' => 'big',
            'default' => '2020',
            'not null' => TRUE,
            'description' => 'year the issue is active for'
        );
        $schema[$table_name]['fields']['civicrm_id'] = array(
            'type' => 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => TRUE,
            'description' => 'link to civicrm for bill tracking info'
        );
        $schema[$table_name]['fields']['primary_status']= array(
            'type' => 'int',
            'size' =>  'tiny',
            'default' => '0',
            'not null' => true,
            'description' => 'boolean for if the  issue is the first time this issue has comite up'
        );
        $schema[$table_name]['fields']['primary_issue_id'] = array(
            'type' => 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => false,
            'description' => 'if primary is not true, then what is the first time the issue has come up'
        );
        $schema[$table_name]['fields']['created_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['last_modified_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );

    }
}
class rating_table extends issue_table
{
    public function set_up_rating_table()
    {
        $table_name = 'nfb_washington_issues';
        $this->table_test($table_name);
        $this->ratings_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for ratings";
        $schema[$table_name]['primary key'] = ['rating_id'];
        $this->create_table($schema, $table_name);
    }
    public function ratings_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['rating_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: rating id'
        );
        $schema[$table_name]['fields']['activity_id'] = array(
          'type' => 'int',
          'size' => 'big',
          'default' => null,
          'not null' => False,
          'description' => 'FK toactivity'
        );
        $schema[$table_name]['fields']['member_id'] = array(
            'type' => 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => true,
            'description' => 'FK to member'
        );
        $schema[$table_name]['fields']['issue_id'] = array(
            'type' => 'int',
            'size' => 'big',
            'default' => '0',
            'not null' => true,
            'description' => 'FK to issue'
        );
        $schema[$table_name]['fields']['rating'] = array(
            'type'=> 'varchar',
            'length' => '4',
            'default' => '',
            'not null' => TRUE,
            'description' => 'Rating '
        );
        $schema[$table_name]['fields']['comment'] = array(
            'type'=> 'varchar',
            'length' => '500',
            'default' => '',
            'not null' => False,
            'description' => 'Rating comments'
        );
        $schema[$table_name]['fields']['created_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['last_modified_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['foreign keys'] = array(
            'nfb_washington_members' => array(
                'table' => 'nfb_washington_members',
                'columns' => array('member_id' => 'member_id')
            ),
            'nfb_washington_activities' => array(
                'table' => 'nfb_washington_activities',
                'columns' => array('activity_id' => 'activity_id')
            ),
            'nfb_washington_issues' => array(
                'table' => 'nfb_washington_issues',
                'columns' => array('issue_id' => 'issue_id')
            )
        );

    }
}
class note_table extends rating_table
{
    public function set_up_note_table()
    {
        $table_name = 'nfb_washington_note';
        $this->table_test($table_name);
        $this->note_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for notes";
        $schema[$table_name]['primary key'] = ['note_id'];
        $this->create_table($schema, $table_name);
    }
    public function note_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['note_id'] = array(
        'type'=> 'serial',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: note id'
    );
        $schema[$table_name]['fields']['note'] = array(
            'type'=> 'varchar',
            'length' => '500',
            'default' => '',
            'not null' => False,
            'description' => 'Rating comments'
        );
        $schema[$table_name]['fields']['created_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['last_modified_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['year']= array(
          'type' => 'int',
          'size' =>  'big',
          'default' => '2020',
          'not null' => true,
            'description' => 'year note is active'
        );
    }
}
class note_link extends  note_table
{
    public function set_up_note_link_table()
    {
        $table_name = 'nfb_washington_note_link';
        $this->table_test($table_name);
        $this->link_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table ftha links  notes as a one to many";
        $schema[$table_name]['primary key'] = ['link_id'];
        $this->create_table($schema, $table_name);
    }
    public function link_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['link_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: link id'
        );
        $schema[$table_name]['fields']['table_name'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['entity_id']= array(
            'type' => 'int',
            'size' =>  'big',
            'default' => '0',
            'not null' => true,
            'description' => 'id for whatever committee, member, or other entity the note is attached to'
        );
        $schema[$table_name]['fields']['note_id']= array(
            'type' => 'int',
            'size' =>  'big',
            'default' => '0',
            'not null' => true,
            'description' => 'id for the note'
        );
    }
}
class committee_table extends note_link
{
    public function set_up_committee_table()
    {
        $table_name = 'nfb_washington_committee';
        $this->table_test($table_name);
        $this->committee_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for committees";
        $schema[$table_name]['primary key'] = ['committee_id'];
        $this->create_table($schema, $table_name);
    }
    public function  committee_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['committee_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: committe_id'
        );
        $schema[$table_name]['fields']['propublica_id']= array(
            'type' => 'int',
            'size' =>  'big',
            'default' => '0',
            'not null' => true,
            'description' => 'id used in propublica'
        );
        $schema[$table_name]['fields']['committee_name'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => true,
            'description' => 'committee name'
        );
        $schema[$table_name]['fields']['chamber'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => true,
            'description' => 'committee chamber'
        );
        $schema[$table_name]['fields']['active']= array(
            'type' => 'int',
            'size' =>  'tiny',
            'default' => '0',
            'not null' => true,
            'description' => 'boolean for if the committee is still in use by congress'
        );
    }
}
class comittee_memberhsip_table extends committee_table
{
    public function set_up_committee_membership_table()
    {
        $table_name = 'nfb_washington_committee_mem';
        $this->table_test($table_name);
        $this->com_mem_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for committee memberships";
        $schema[$table_name]['primary key'] = ['com_mem_id'];
        $this->create_table($schema, $table_name);
    }
    public function  com_mem_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['com_mem_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: committe member id'
        );
        $schema[$table_name]['fields']['committee_id']= array(
            'type' => 'int',
            'size' =>  'big',
            'default' => '0',
            'not null' => true,
            'description' => 'id for the committed'
        );
        $schema[$table_name]['fields']['member_id']= array(
            'type' => 'int',
            'size' =>  'big',
            'default' => '0',
            'not null' => true,
            'description' => 'id for the member'
        );
        $schema[$table_name]['fields']['active']= array(
            'type' => 'int',
            'size' =>  'tiny',
            'default' => '0',
            'not null' => true,
            'description' => 'bolean for active relationship'
        );
        $schema[$table_name]['foreign keys'] = array(
            'nfb_washington_members' => array(
                'table' => 'nfb_washington_members',
                'columns' => array('member_id' => 'member_id')
            ),
            'nfb_washington_committee' => array(
                'table' => 'nfb_washington_committee',
                'columns' => array('committee_id' => 'committee_id')
            ),
        );

    }
}
class configuration_table extends comittee_memberhsip_table
{
    public function set_up_configuration_table()
    {
        $table_name = 'nfb_washington_config';
        $this->table_test($table_name);
        $this->configuration_schema($table_name, $schema);
        $schema[$table_name]['description'] = "Table for settings";
        $schema[$table_name]['primary key'] = ['config_id'];
        $this->create_table($schema, $table_name);
    }
    public function  configuration_schema($table_name, &$schema)
    {
        $schema[$table_name]['fields']['config_id'] = array(
            'type'=> 'serial',
            'size' => 'big',
            'unsigned' => TRUE,
            'not null' => TRUE,
            'description' => 'Primary Key: configuration id'
        );
        $schema[$table_name]['fields']['setting'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => true,
            'description' => 'setting name'
        );
        $schema[$table_name]['fields']['value'] = array(
            'type'=> 'varchar',
            'length' => '256',
            'default' => '',
            'not null' => true,
            'description' => ' name'
        );
        $schema[$table_name]['fields']['active']= array(
            'type' => 'int',
            'size' =>  'tiny',
            'default' => '0',
            'not null' => true,
            'description' => 'bolean for active relationship'
        );
        $schema[$table_name]['fields']['created_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );
        $schema[$table_name]['fields']['last_modified_user'] = array(
            'type'=> 'varchar',
            'length' => '64',
            'default' => '',
            'not null' => False,
            'description' => 'who made the note'
        );

    }
}
$install = new configuration_table();
$install->set_up_member_table();
$install->set_up_meeting_table();
$install->set_up_issue_table();
$install->set_up_rating_table();
$install->set_up_note_table();
$install->set_up_note_link_table();
$install->set_up_committee_table();
$install->set_up_committee_membership_table();
$install->set_up_configuration_table();